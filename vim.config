"ln -sf ${PWD}/vim_config  ${HOME}/.vimrc

":so ${HOME}/.vim/vim.addons/dev.null.vim

:so ${HOME}/.vim/vim.addons/default.vim
":so ${HOME}/.vim/vim.addons/spell.check.vim
":so ${HOME}/.vim/vim.addons/hard.reset.vim
:so ${HOME}/.vim/vim.addons/load.pathogen.vim
:so ${HOME}/.vim/vim.addons/filetype.conf.vim
:so ${HOME}/.vim/vim.addons/omnicomplete.conf.vim
:so ${HOME}/.vim/vim.addons/neocomplete.conf.vim
:so ${HOME}/.vim/vim.addons/solarized.color.vim
:so ${HOME}/.vim/vim.addons/nerdtree.conf.vim
:so ${HOME}/.vim/vim.addons/ctrpl.conf.vim

"code-navigation
:so ${HOME}/.vim/vim.addons/cscope.conf.vim
:so ${HOME}/.vim/vim.addons/ctags.conf.vim
:so ${HOME}/.vim/vim.addons/tlist.conf.vim

" set alignment
:so ${HOME}/.vim/vim.addons/tabularize.conf.vim

"
"Update snipmate
"bundle/snipmate.vim/snippets/java.snippets
"
"set runtimepath+=~/.vim/UltiSnips/
" use different snippets dir
"let g:UltiSnipsSnippetsDir='~/.vim/UltiSnips/'
"let g:UltiSnipsSnippetDirectories=["UltiSnips"]

"let g:UltiSnipsExpandTrigger="<tab>"
"let g:UltiSnipsJumpForwardTrigger="<c-b>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"

"enable filetype,plugin,indent on
:filetype plugin indent on

" To disable a plugin, add its bundle name to the following list
let g:pathogen_disabled = []

if v:version <= '704'
    call add(g:pathogen_disabled, 'ultisnips')
endif


